#if !defined(PETSC_USE_FORTRAN_MODULES) 
#include "finclude/ftn-custom/petscmatdef.h90"
#endif
#include "finclude/ftn-custom/petscishide.h90"
#include "finclude/ftn-custom/petscmathide.h90"

      Interface 
        Subroutine MatGetRowIJF90(v,shift,sym,blockcompressed,n,ia, &
     &                            ja,done,ierr)
          USE_MAT_HIDE
          PetscInt, pointer :: ia(:), ja(:)
          PetscInt  n,shift
          PetscTruth sym,blockcompressed,done
          PetscErrorCode ierr
          MAT_HIDE     v
        End Subroutine
      End Interface

      Interface 
        Subroutine MatRestoreRowIJF90(v,shift,sym,blockcompressed,n, &
     &                                ia,ja,done,ierr)
          USE_MAT_HIDE
          PetscInt, pointer :: ia(:), ja(:)
          PetscInt  n,shift
          PetscTruth sym,blockcompressed,done
          PetscErrorCode ierr
          MAT_HIDE     v
        End Subroutine
      End Interface

      Interface 
        Subroutine MatGetArrayF90(v,array,ierr)
          USE_MAT_HIDE
          PetscScalar, pointer :: array(:,:)
          PetscErrorCode ierr
          MAT_HIDE     v
        End Subroutine
      End Interface


      Interface 
        Subroutine MatRestoreArrayF90(v,array,ierr)
          USE_MAT_HIDE
          PetscScalar, pointer :: array(:,:)
          PetscErrorCode ierr
          MAT_HIDE     v
        End Subroutine
      End Interface

      Interface 
        Subroutine MatGetGhostsF90(v,array,ierr)
          USE_MAT_HIDE
          PetscInt, pointer :: array(:)
          PetscErrorCode ierr
          MAT_HIDE     v
        End Subroutine
      End Interface

      Interface
         Subroutine MatGetInfo(v, flag, info ,ierr)
         USE_MAT_HIDE
         MAT_HIDE  v
         MatInfoType flag
         MatInfo info(:)
         PetscErrorCode ierr
       End Subroutine
      End Interface

      Interface
         subroutine MatLUFactor(v, row, col, info ,ierr)
         USE_MAT_HIDE
         MAT_HIDE  v
         IS_HIDE row
         IS_HIDE col
         MatFactorInfo info(:)
         PetscErrorCode ierr
         end subroutine
      End Interface

      Interface
         subroutine MatILUFactor(v, row, col, info ,ierr)
         USE_MAT_HIDE
         MAT_HIDE  v
         IS_HIDE row
         IS_HIDE col
         MatFactorInfo info(:)
         PetscErrorCode ierr
         end subroutine
      End Interface

      Interface
         subroutine MatLUFactorSymbolic(fact, v, row, col, info ,ierr)
         USE_MAT_HIDE
         MAT_HIDE  fact
         MAT_HIDE  v
         IS_HIDE row
         IS_HIDE col
         MatFactorInfo info(:)
         PetscErrorCode ierr
         end subroutine
      End Interface
      
      Interface
         subroutine MatLUFactorNumeric(fact, v, info ,ierr)
         USE_MAT_HIDE
         MAT_HIDE  fact
         MAT_HIDE  v
         MatFactorInfo info(:)
         PetscErrorCode ierr
         end subroutine
      End Interface

      Interface
         subroutine MatCholeskyFactor(v, perm, info ,ierr)
         USE_MAT_HIDE
         MAT_HIDE  v
         IS_HIDE perm
         MatFactorInfo info(:)
         PetscErrorCode ierr
         end subroutine
      End Interface
      
      Interface
         subroutine MatCholeskyFactorSymbolic(fact,v,perm,info,ierr)
         USE_MAT_HIDE
         MAT_HIDE  fact
         MAT_HIDE  v
         IS_HIDE perm
         MatFactorInfo info(:)
         PetscErrorCode ierr
         end subroutine
      End Interface

      Interface
         subroutine MatCholeskyFactorNumeric(fact, v, info ,ierr)
         USE_MAT_HIDE
         MAT_HIDE  fact
         MAT_HIDE  v
         MatFactorInfo info(:)
         PetscErrorCode ierr
         end subroutine
      End Interface

      Interface
         subroutine MatILUFactorSymbolic(fact,v,row,col,info,ierr)
         USE_MAT_HIDE
         MAT_HIDE  fact
         MAT_HIDE  v
         IS_HIDE row
         IS_HIDE col
         MatFactorInfo info(:)
         PetscErrorCode ierr
         end subroutine
      End Interface

      Interface
         subroutine MatICCFactorSymbolic(fact, v, perm, info ,ierr)
         USE_MAT_HIDE
         MAT_HIDE  fact
         MAT_HIDE  v
         IS_HIDE perm
         MatFactorInfo info(:)
         PetscErrorCode ierr
         end subroutine
      End Interface

      Interface
         subroutine MatICCFactor(v, row, info ,ierr)
         USE_MAT_HIDE
         MAT_HIDE  v
         IS_HIDE row
         MatFactorInfo info(:)
         PetscErrorCode ierr
         end subroutine
      End Interface

      Interface
         subroutine MatFactorInfoInitialize(info ,ierr)
         MatFactorInfo info(:)
         PetscErrorCode ierr
         end subroutine
      End Interface
