
#if !defined(PETSC_USE_FORTRAN_MODULES) 
#include "finclude/ftn-custom/petscmatdef.h90"
#endif


#if defined(PETSC_USE_FORTRAN_DATATYPES) && !defined(MAT_HIDE)
#define MAT_HIDE type(Mat)
#define MATFDCOLORING_HIDE type(MatFDColoring)
#define MATNULLSPACE_HIDE type(MatNullSpace)
#define USE_MAT_HIDE use petscmatdef
#elif !defined(MAT_HIDE)
#define MAT_HIDE Mat
#define MATFDCOLORING_HIDE MatFDColoring
#define MATNULLSPACE_HIDE MatNullSpace
#define USE_MAT_HIDE
#endif

      Interface 
        Subroutine MatGetArrayF90(v,array,ierr)
          USE_MAT_HIDE
          PetscScalar, pointer :: array(:,:)
          PetscErrorCode ierr
          MAT_HIDE     v
        End Subroutine
      End Interface


      Interface 
        Subroutine MatRestoreArrayF90(v,array,ierr)
          USE_MAT_HIDE
          PetscScalar, pointer :: array(:,:)
          PetscErrorCode ierr
          MAT_HIDE     v
        End Subroutine
      End Interface

      Interface 
        Subroutine MatGetGhostsF90(v,array,ierr)
          USE_MAT_HIDE
          PetscInt, pointer :: array(:)
          PetscErrorCode ierr
          MAT_HIDE     v
        End Subroutine
      End Interface

