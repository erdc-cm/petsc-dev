
#if !defined(PETSC_USE_FORTRAN_MODULES)
#include "finclude/ftn-custom/petscdmcomplexdef.h90"
#endif

#include "finclude/ftn-custom/petscdmhide.h90"

#if defined(PETSC_USE_FORTRAN_DATATYPES) && !defined(USE_DMCOMPLEX_HIDE)
#  define USE_DMCOMPLEX_HIDE use petscdmcomplexdef
#elif !defined(USE_DMCOMPLEX_HIDE)
#  define USE_DMCOMPLEX_HIDE
#endif

      Interface
        Subroutine DMComplexGetCone(m,p,cone,ierr)
          USE_DMCOMPLEX_HIDE
          PetscInt     p
          PetscInt, pointer :: cone(:)
          PetscErrorCode ierr
          DM_HIDE m
        End Subroutine
      End Interface

      Interface
        Subroutine DMComplexGetConeOrientation(m,p,coneOrientation,ierr)
          USE_DMCOMPLEX_HIDE
          PetscInt     p
          PetscInt, pointer :: coneOrientation(:)
          PetscErrorCode ierr
          DM_HIDE m
        End Subroutine
      End Interface

      Interface
        Subroutine DMComplexGetSupport(m,p,support,ierr)
          USE_DMCOMPLEX_HIDE
          PetscInt     p
          PetscInt, pointer :: support(:)
          PetscErrorCode ierr
          DM_HIDE m
        End Subroutine
      End Interface

      Interface
        Subroutine DMComplexGetTransitiveClosure(m,p,useCone,points,ierr)
          USE_DMCOMPLEX_HIDE
          PetscInt     p
          PetscBool    useCone
          PetscInt, pointer :: points(:)
          PetscErrorCode ierr
          DM_HIDE m
        End Subroutine
      End Interface

      Interface
        Subroutine DMComplexRestoreTransitiveClosure(m,p,useCone,points,ierr)
          USE_DMCOMPLEX_HIDE
          PetscInt     p
          PetscBool    useCone
          PetscInt, pointer :: points(:)
          PetscErrorCode ierr
          DM_HIDE m
        End Subroutine
      End Interface

      Interface
        Subroutine DMComplexVecGetClosure(m,section,v,point,values,ierr)
          USE_DMCOMPLEX_HIDE
          PETSCSECTION_HIDE section
          VEC_HIDE     v
          PetscInt     point
          PetscScalar, pointer :: values(:)
          PetscErrorCode ierr
          DM_HIDE m
        End Subroutine
      End Interface

      Interface
        Subroutine DMComplexVecRestoreClosure(m,section,v,point,values,ierr)
          USE_DMCOMPLEX_HIDE
          PETSCSECTION_HIDE section
          VEC_HIDE     v
          PetscInt     point
          PetscScalar, pointer :: values(:)
          PetscErrorCode ierr
          DM_HIDE m
        End Subroutine
      End Interface

      Interface
        Subroutine DMComplexVecSetClosure(m,section,v,point,values,mode,ierr)
          USE_DMCOMPLEX_HIDE
          PETSCSECTION_HIDE section
          VEC_HIDE     v
          PetscInt     point
          InsertMode   mode
          PetscScalar, pointer :: values(:)
          PetscErrorCode ierr
          DM_HIDE m
        End Subroutine
      End Interface
