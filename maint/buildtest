#! /bin/csh
# 
# Compiles and tests PETSc in our nightly builds.
# Run as buildtest ARCH where ARCH is one of the default PETSc archs
# of a configure arch
#
# Example usage: ${PETSC_DIR}/maint/buildtest solaris
#                ./maint/buildtest solaris
#                ./maint/buildtest 
#
set day=`date | cut -f1 -d" "`
#
set nPETSC_DIR=`pwd`
if ( ! -f ${nPETSC_DIR}/include/petsc.h ) then
  set maintdir=`dirname $0`
  set nPETSC_DIR=`dirname $maintdir`
  if ( ( ${nPETSC_DIR} !~ /*) || (! -f ${nPETSC_DIR}/include/petsc.h )) then
    if (${?PETSC_DIR}) then 
      set nPETSC_DIR=${PETSC_DIR}
      if ( ! -f ${nPETSC_DIR}/include/petsc.h ) then
        echo "Unable to locate PETSc directory, run with full path or in PETSc directory"
        exit
      endif
    else
      echo "Unable to locate PETSc directory, run with full path or in PETSc directory"
      exit
    endif
  endif
endif

if (${#argv} > 0) then 
  set ARCH=${1}
else
  set ARCH=`${nPETSC_DIR}/bin/configarch`
endif
if (${#argv} > 1) then 
  set CONFIGURE_ARGS="${argv[2-]}"
else 
  set CONFIGURE_ARGS=""
endif

set MACH=`hostname`
rm -f $nPETSC_DIR/build.log
rm -f $nPETSC_DIR/buildout.tar
echo "Build on $MACH $ARCH  `date` " > $nPETSC_DIR/build.log

cd $nPETSC_DIR
bk pull -q >>& $nPETSC_DIR/build.log
pushd python/BuildSystem
bk pull -q >>& $nPETSC_DIR/build.log
popd

set DATAFILESPATH=/home/petsc/datafiles
set NICE=''
set TEST='testexamples_'
set BOPT=g
# possibly overwrite the values above
if (${#argv} >= 1 && -f ${nPETSC_DIR}/config/${ARCH}) then
  source ${nPETSC_DIR}/config/${ARCH}
endif

setenv PETSC_DIR $nPETSC_DIR
set PETSC_ARCH=${ARCH}
if (${#argv} >= 1 && -f ${nPETSC_DIR}/config/${ARCH}.py) then
  set CONFIGURE='yes'
  set CONFIGURE_FILE=$PETSC_ARCH
else if (${#argv} == 1 && -f ${nPETSC_DIR}/bmake/${ARCH}/variables && ! -f ${nPETSC_DIR}/bmake/${ARCH}/configure.py) then
  # this is a non-configure PETSC_ARCH
  set CONFIGURE='no'
else
  set CONFIGURE='yes'
  set CONFIGURE_FILE='configure'
endif
echo "Performing buildtest on " $MACH "with arch " $PETSC_ARCH " at " $nPETSC_DIR


# Run Configure
if ("${CONFIGURE}" == "yes") then
  ./config/${CONFIGURE_FILE}.py --with-no-output -PETSC_ARCH=$PETSC_ARCH -PETSC_DIR=$nPETSC_DIR ${CONFIGURE_ARGS} >>& build.log
  echo '****************************************************' >>& $nPETSC_DIR/build.log
  set EJOBS=`cat $nPETSC_DIR/bmake/$PETSC_ARCH/ejobs`
  set JOBS=`cat $nPETSC_DIR/bmake/$PETSC_ARCH/jobs`
  set RJOBS=`cat $nPETSC_DIR/bmake/$PETSC_ARCH/rjobs`
  tar cf buildoutput.tar configure.log bmake/$PETSC_ARCH/*
else
  #  Get the list of packages installed on the machine
  set JOBS='1 2 3'
  set EJOBS=`grep PETSC_HAVE_ $nPETSC_DIR/bmake/$PETSC_ARCH/packages | grep -v "#" | grep -v '\$' | sed -e "s/^PETSC_HAVE_\([A-Z0-9_]*\) [- a-zA-Z_0-9=]*/\1/g" | grep -v DPETSC`
endif

make BOPT=g PETSC_ARCH=$PETSC_ARCH PETSC_DIR=$nPETSC_DIR allfortranstubs >>& $nPETSC_DIR/build.log

if ("${BOPT}" == "g_complex" ||  "${BOPT}" == "O_complex") then
  set EJOBS=""
  set RJOBS=""
endif

make PETSC_ARCH=$PETSC_ARCH PETSC_DIR=$nPETSC_DIR BOPT=$BOPT all test >>& build.log
echo '****************************************************' >>& build.log
echo "Finished Build on $MACH $PETSC_ARCH $BOPT `date`" >>& build.log
tar rf buildoutput.tar build.log
#
#
# Run examples
rm -f examples.log
echo "Build on $MACH $PETSC_ARCH  $BOPT `date` " > examples.log
foreach j ($JOBS $EJOBS $RJOBS)
  $NICE make PETSC_ARCH=$PETSC_ARCH PETSC_DIR=$nPETSC_DIR BOPT=$BOPT ACTION=$TEST$j DATAFILESPATH=$DATAFILESPATH tree |& grep -v 'up to date' >>& examples.log
  echo '******************************************************' >>& $nPETSC_DIR/examples.log
end
echo "Finished Build on $MACH $PETSC_ARCH $BOPT `date`" >>& $nPETSC_DIR/examples.log
echo 'X******************************************************X' >>& $nPETSC_DIR/examples.log
tar rf buildoutput.tar examples.log


