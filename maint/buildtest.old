#! /bin/csh
# 
# Compiles and tests PETSc in our nightly builds.
# Run as buildtest ARCH where ARCH is one of the PETSc archs
# This script runs on terra, and uses terra:/sandbox/petsc/petsc-test
#
# Example usage: buildtest solaris
#
set DATAFILESPATH=/home/petsc/datafiles
set NICE=''
set APPEND='>>&'
set maintdir=`dirname $0`
set dir=`dirname $maintdir`
set TEST='testexamples_'
if (${#argv} >= 1 && -f ${maintdir}/buildtests/${1}) then
  set ARCH=$1
  set RSH='ssh -1'
  set CONFIGURE='no'
  set DASHN='-n'
  source $maintdir/buildtests/$1
  set CONFIGURE_FILE=$ARCH
  set CONFIGURE_ARGS="${argv[2-]}"
  set PETSC_ARCH_NAME=''
  echo "Performing buildtest on " $MACH " with arch " $ARCH " at " $TMP
  rsync -z -e "$RSH" -C -r --exclude=BitKeeper --delete $dir/* ${MACH}:$TMP
  # should delete all previously build libraries
else
  # run in-place
  set TMP=${dir}
  set RSH='eval'
  set MACH=''
  set DASHN=''
  set CONFIGURE='yes'
  set CONFIGURE_FILE='configure'
  set CONFIGURE_ARGS="${argv}"
  setenv PETSC_DIR $dir
  set ARCH=`$dir/bin/configarch`
  set PETSC_ARCH_NAME=-PETSC_ARCH=$ARCH
  set BOPT='g'
  echo "Performing buildtest locally with arch " $ARCH " at " $TMP
endif

$RSH $MACH $DASHN "rm -f $TMP/maint/build_$ARCH.$BOPT.$MACH.log $TMP/maint/examples_$ARCH.$BOPT.$MACH.log"
$RSH $MACH $DASHN "touch $TMP/maint/build_$ARCH.$BOPT.$MACH.log $TMP/maint/examples_$ARCH.$BOPT.$MACH.log"
$RSH $MACH $DASHN "echo 'Build on $MACH $ARCH $BOPT `date` ' $APPEND $TMP/maint/build_$ARCH.$BOPT.$MACH.log"

# Run Configure
if ("${CONFIGURE}" == "yes") then
  $RSH $MACH $DASHN "cd $TMP; ./config/${CONFIGURE_FILE}.py ${PETSC_ARCH_NAME} -PETSC_DIR=$TMP ${CONFIGURE_ARGS} $APPEND maint/build_${ARCH}.${BOPT}.${MACH}.log"
  $RSH $MACH $DASHN "echo '****************************************************' $APPEND $TMP/maint/build_$ARCH.$BOPT.$MACH.log"
  set EJOBS=`$RSH $MACH $DASHN cat $TMP/bmake/$ARCH/ejobs`
  set JOBS=`$RSH $MACH $DASHN cat $TMP/bmake/$ARCH/jobs`
  $RSH $MACH $DASHN "rm -f $TMP/buildout.tar"
  $RSH $MACH $DASHN "cd $TMP; tar cf buildoutput.tar configure.log bmake/$ARCH/*"
else
#  Get the list of packages installed on the machine WHERE THE BUILD IS HAPPENING
  set EJOBS=`$RSH $MACH $DASHN grep PETSC_HAVE_ $TMP/bmake/$ARCH/packages | grep -v "#" | grep -v '\$' | sed -e "s/^PETSC_HAVE_\([A-Z0-9_]*\) [- a-zA-Z_0-9=]*/\1/g" | grep -v DPETSC`
endif

if ("${BOPT}" == "g_complex" ||  "${BOPT}" == "O_complex") then
  set EJOBS=""
endif


$RSH $MACH $DASHN "cd $TMP;make PETSC_ARCH=$ARCH PETSC_DIR=$TMP BOPT=$BOPT all $APPEND maint/build_$ARCH.$BOPT.$MACH.log"
$RSH $MACH $DASHN "echo '****************************************************' $APPEND $TMP/maint/build_$ARCH.$BOPT.$MACH.log"
$RSH $MACH $DASHN "echo 'Finished Build on $MACH $ARCH $BOPT `date`' $APPEND $TMP/maint/build_$ARCH.$BOPT.$MACH.log"
$RSH $MACH $DASHN "cd $TMP; tar rf buildoutput.tar maint/build_$ARCH.$BOPT.$MACH.log"
#
#
#
# Run examples
$RSH $MACH $DASHN "echo 'Build on $MACH $ARCH  $BOPT `date` ' $APPEND $TMP/maint/examples_$ARCH.$BOPT.$MACH.log"
foreach j ($JOBS $EJOBS)
  $RSH $MACH $DASHN "cd $TMP; $NICE make PETSC_ARCH=$ARCH PETSC_DIR=$TMP BOPT=$BOPT ACTION=$TEST$j DATAFILESPATH=$DATAFILESPATH tree | grep -v 'up to date' $APPEND maint/examples_$ARCH.$BOPT.$MACH.log"
  $RSH $MACH $DASHN "echo '******************************************************' $APPEND $TMP/maint/examples_$ARCH.$BOPT.$MACH.log"
end
$RSH $MACH $DASHN "echo 'Finished Build on $MACH $ARCH $BOPT `date`' $APPEND $TMP/maint/examples_$ARCH.$BOPT.$MACH.log"
$RSH $MACH $DASHN "echo 'X******************************************************X' $APPEND $TMP/maint/examples_$ARCH.$BOPT.$MACH.log"
$RSH $MACH $DASHN "cd $TMP; tar rf buildoutput.tar maint/examples_$ARCH.$BOPT.$MACH.log"


