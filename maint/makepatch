#! /bin/sh
# $Id: makepatch,v 1.3 1997/09/10 19:44:09 balay Exp $ 

#
# Create a patch file for a single file or multiple files
#
#
# Process args
VER=""
rootdir=/home/petsc/petsc_patch
for arg in "$@" ; do
#    echo procssing arg $arg
    case "$arg" in 
	-echo)
	set -x
	;;

        -help)
        echo "Description: "
	echo "  Create a patch file for a single file or multiple files,"
	echo "  against the current version of PETSc."
        echo " "
	echo "Options:"
	echo "  VER=version : create a patch file by name petsc_patch.verison in the"
        echo "                 current dir"
	echo "  ROOTDIR=dir : Change the directory containing the original version"
	echo "                 of PETSC to create the patch against.  The default"
        echo "                 dir is $rootdir"
        echo " file1 file2   : the modified files with relative path from PETSC_DIR"
        echo " "
        echo "Example Usage:"
        echo "  1. fix the bug in ~petsc/petsc.solid (or ~petsc/petsc-2.0.Beta.*)"
        echo "  2. cd ~petsc/petsc.solid"      
        echo "  3. makepatch VER=1 src/sles/examples/ex31.c bmake/common"
        echo "  4. update $rootdir with the patch"
        echo "     4.1 cd $rootdir/petsc"
        echo "     4.2 patch < petsc_patch.1"
        echo "     4.3 find . -type f -name "*.orig" -exec rm {} \;"
        echo "     4.4 find . -type f -name "*.rej" -exec rm {} \;"
        echo "     4.5 (to undo the patch) patch -R < petsc_patch.1"
        echo "  5. put the patchfile petsc_patch.1 in the ftp area"
        echo "  6. Update README file in the ftp area and www area "
        echo " "
        echo "Notes:"
        echo "  After every public release, update $rootdir with it."
        echo "  make sure to number the patchfiles in the right order."
        echo "  To apply patch, first cd PETSC_DIR. Then patch < patchfile"
	exit 1
	;;

	VER=*)
	VER=`echo $arg | sed 's/-VER=//g'`
	;;

	ROOTDIR=*)
	rootdir=`echo $arg | sed 's/-rootdir=//g'`
	;;

	*) 
	basefile="$basefile $arg"
	;;
    esac
done

if [ -z "$VER" ] ; then
    echo "insufficient arguments. specify VER=version or try -help"
    exit 1
fi

if [ -s "petsc_patch.$VER" ] ; then
    echo "File petsc_patch.$VER exists. Either remove it or specify sifferent version"
    exit 1
fi

for file in $basefile ; do
    if  [ ! -f $file ] ; then
         touch $file
    fi

    if [ -r $rootdir/petsc/$file ] ; then
          diff -c4 $rootdir/petsc/$file $file | sed "s%$rootdir/%.%g" >>\
           petsc_patch.$VER
    else
          diff -c4 /dev/null $file | sed "s%$rootdir/%.%g" >>\
	   petsc_patch.$VER
    fi
done

