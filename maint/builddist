#!/bin/sh
#
# This script builds the PETSc tar file distribution
# It uses the bk rep in terra:/sandbox/petsc/petsc-dist
#
# Usage: builddist version
# example usage: builddist -2.1.1
#
#echo "------- Have you done ALL of the following?? -----------------------------"
#echo "(0) Excluded any directories not for public release (for example, src/eg, src/snes/interface/noise)"
#echo "(1) Built wwwpages, latexpages by running make allmanpages?"
#echo "(2) Set the version number in manual_tex.tex, manual.tex, and intro.tex?"
#echo "(3) Built the users manual (and intro) in .ps and .html?"
#echo "(4) Set the version number and release date in petsc.h?"
#echo "(5) Rebuilt and checked all Fortran stubs?"
#echo "(6) Made sure that all *.f Fortran examples (snes/examples/ex10.f) run correctly?"
#echo "(7) Made sure Fortran include files match C ones?"
#echo "(8) Made sure the web documents are updated into the source tree - make updatewebdocs?"
#echo "(8) Latest version of win32fe.exe is copied over into /sandbox/petsc/petsc-dist on terra"

# If version specified on the commandline, set the version
if [ $# = 1 ] ; then 
  version=$1
  echo "Building ~/petsc$version.tar.gz"
else
  set version=""
fi

# If /sandbox/petsc/tmp does not exist create it.
tmpdir="/sandbox/petsc/tmp"
if [ ! -d $tmpdir ]; then
  mkdir -p $tmpdir
fi
if [ ! -d $tmpdir ]; then
  echo 'Cannot create $tmpdir. Exiting..'
  exit  
fi
/bin/rm -rf ${tmpdir}/*

# Update the bk repository
export PETSC_ARCH=linux
export PETSC_DIR=/sandbox/petsc/petsc-dist
cd $PETSC_DIR
bk pull
bk -r co -q

# create fortran stubdocs, configure and cleanup
cd $PETSC_DIR
make allfortranstubs
make configure
make alldoc allhtml LOC=${PETSC_DIR}
${PETSC_DIR}/maint/update-docs.py ${PETSC_DIR}
make ACTION=clean tree
cd ${PETSC_DIR}/projects; make 
# now tar up the PETSc tree
cd /sandbox/petsc
/bin/tar --create --file $tmpdir/petsc.tar --exclude=SCCS --exclude-from  ${PETSC_DIR}/maint/xclude  petsc-dist
cd $tmpdir
/bin/tar xf $tmpdir/petsc.tar
mv petsc-dist petsc
#
# Before Creating the tarfile, make changes to the bmakefiles/makefiles,
# create tagfiles etc. permissions etc.
#
cd $tmpdir/petsc

# Eliminate unnecessary petscmachineinfo.h & buildtest files
/bin/rm -f bmake/*/petscmachineinfo.h
/bin/rm -f bmake/*/buildtest

# Eliminate chmods in the makefile & bmake/common/rules
/bin/mv makefile makefile.bak
/bin/grep -v 'chmod' makefile.bak > makefile
/bin/rm -f makefile.bak

/bin/mv bmake/common/rules bmake/common/rules.bak
/bin/grep -v 'chmod' bmake/common/rules.bak > bmake/common/rules
/bin/rm -f  bmake/common/rules.bak

# eliminate .html files in src/contrib
/usr/bin/find src/contrib -type f -name "*.html" -exec /bin/rm -f {} \;

# Create EMACS-TAGS
make etags etags_examples TAGSDIR=`pwd`

# Clean up the external Packages from PETSC_ARCH/packages files
for i in bmake/*/packages ; do
  cat $i | sed "s/^MPE_INCLUDE/#MPE_INCLUDE/g" | \
    sed "s/^MPE_LIB/#MPE_LIB/g" | \
    sed "s/^PETSC_HAVE_MPE/#PETSC_HAVE_MPE/g" | \
    sed "s/^BLOCKSOLVE_INCLUDE/#BLOCKSOLVE_INCLUDE/g" | \
    sed "s/^BLOCKSOLVE_LIB/#BLOCKSOLVE_LIB/g" | \
    sed "s/^PETSC_HAVE_BLOCKSOLVE/#PETSC_HAVE_BLOCKSOLVE/g" | \
    sed "s/^MCC/#MCC/g" | \
    sed "s/^MATLABCOMMAND/#MATLABCOMMAND/g" | \
    sed "s/^MATLAB_INCLUDE/#MATLAB_INCLUDE/g" | \
    sed "s/^MATLAB_LIB/#MATLAB_LIB/g" | \
    sed "s/^PETSC_HAVE_MATLAB/#PETSC_HAVE_MATLAB/g" | \
    sed "s/^CMEX/#CMEX/g" | \
    sed "s/^PETSC_HAVE_ADIC/#PETSC_HAVE_ADIC/g" | sed "s/^ADIC_CC/#ADIC_CC/g" | \
    sed "s/^PVODE_INCLUDE/#PVODE_INCLUDE/g" | sed "s/^PVODE_LIB/#PVODE_LIB/g" | \
    sed "s/^PETSC_HAVE_PVODE/#PETSC_HAVE_PVODE/g" | \
    sed "s/^PARMETIS_INCLUDE/#PARMETIS_INCLUDE/g" | sed "s/^PARMETIS_LIB/#PARMETIS_LIB/g" | \
    sed "s/^PETSC_HAVE_PARMETIS/#PETSC_HAVE_PARMETIS/g" | \
    sed "s/^AMS_INCLUDE/#AMS_INCLUDE/g" | sed "s/^AMS_LIB/#AMS_LIB/g" | \
    sed "s/^PETSC_HAVE_AMS/#PETSC_HAVE_AMS/g" | \
    sed "s/^SPAI_INCLUDE/#SPAI_INCLUDE/g" | sed "s/^SPAI_LIB/#SPAI_LIB/g" | \
    sed "s/^PETSC_HAVE_SPAI/#PETSC_HAVE_SPAI/g" | \
    sed "s/^PETSC_HAVE_LUSOL/#PETSC_HAVE_LUSOL/g" | \
    sed "s/^LUSOL_LIB/#LUSOL_LIB/g" | \
    sed "s/^TRILINOS_INCLUDE/#TRILINOS_INCLUDE/g" | \
    sed "s/^PETSC_HAVE_TRILINOS/#PETSC_HAVE_TRILINOS/g" | \
    sed "s/^TRILINOS_LIB/#TRILINOS_LIB/g" | \
    sed "s/^CCA_INCLUDE/#CCA_INCLUDE/g" | \
    sed "s/^PETSC_HAVE_CCA/#PETSC_HAVE_CCA/g" | \
    sed "s/^SUPERLU_LIB/#SUPERLU_LIB/g" | \
    sed "s/^SUPERLU_INCLUDE/#SUPERLU_INCLUDE/g" | \
    sed "s/^PETSC_HAVE_SUPERLU/#PETSC_HAVE_SUPERLU/g" | \
    sed "s/^SUPERLUDIST_INCLUDE/#SUPERLUDIST_INCLUDE/g" | \
    sed "s/^SUPERLUDIST_LIB/#SUPERLUDIST_LIB/g" | \
    sed "s/^PETSC_HAVE_SUPERLUDIST/#PETSC_HAVE_SUPERLUDIST/g" | \
    sed "s/^DSCPACK_INCLUDE/#DSCPACK_INCLUDE/g" | \
    sed "s/^DSCPACK_LIB/#DSCPACK_LIB/g" | \
    sed "s/^PETSC_HAVE_DSCPACK/#PETSC_HAVE_DSCPACK/g" | \
    sed "s/^JAVA/#JAVA/g" | sed "s/^JAVAC/#JAVAC/g" | sed "s/^PETSC_HAVE_JAVA/#PETSC_HAVE_JAVA/g" | \
    sed "s/^PCONF/#PCONF/g" > $i.tmp
  /bin/mv -f $i.tmp $i
done

# Set the correct file permissions.
cd $tmpdir
chmod -R a-w petsc
chmod -R u+w petsc
chmod -R a+r petsc
find petsc -type d -name "*" -exec chmod a+x {} \;

/bin/rm -f $tmpdir/petsc.tar
if [ ! ${version}foo = foo ] ; then
  /bin/mv petsc petsc$version
fi

/bin/tar cf $tmpdir/petsc$version.tar petsc$version
/bin/rm -r -f $tmpdir/petsc$version
gzip -f $tmpdir/petsc$version.tar
/bin/cp $tmpdir/petsc$version.tar.gz ~/
/bin/rm -f $tmpdir/petsc$version.tar.gz
chmod ug+w ~/petsc$version.tar.gz

