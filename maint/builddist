#!/bin/sh
#
# This script builds the PETSc tar file distribution
# It uses the bk rep in harley:/sandbox/petsc/petsc-dist (or asterix)
#
# Usage: builddist version
# example usage: builddist -2.1.2
#
#echo "------- Have you done ALL of the following?? -----------------------------"
#echo "(0) Excluded any directories not for public release"
#echo "(1) Set the version number in manual.tex, and intro.tex, website/index.html?"
#echo "(2) Set the version number and release date in petscversion.h?"
#echo "(3) Made sure Fortran include files match C ones?"
#echo "(4) Latest version of win32fe.exe is copied over into /sandbox/petsc/petsc-dist on harley"
#echo "(5) Update update-docs.py with additional docs on the www-fp web page (for eg new changes file)"
#echo "(5) Update version info on all www-fp/petsc web pages"
#echo "(5) tag the new release with 'bk' and make a new clone for the release"

# If version specified on the commandline, set the version
echo "Starting date: `date`"

if [ $# = 1 ] ; then 
  version=$1
  echo "Building ~/petsc$version.tar.gz"
else
  set version=""
fi

# If /sandbox/petsc/tmp does not exist create it.
tmpdir="/sandbox/petsc/tmp"
if [ ! -d $tmpdir ]; then
  mkdir -p $tmpdir
fi
if [ ! -d $tmpdir ]; then
  echo 'Cannot create $tmpdir. Exiting..'
  exit  
fi
/bin/rm -rf ${tmpdir}/*

# Update the bk repository
PETSC_ARCH=default; export PETSC_ARCH
PETSC_DIR=/sandbox/petsc/petsc-dist; export PETSC_DIR
cd $PETSC_DIR/python/BuildSystem
bk pull
bk -r co -q
cd $PETSC_DIR
bk pull
bk -r co -q

# create fortran stubdocs and cleanup
cd $PETSC_DIR
make allfortranstubs
make alldoc LOC=${PETSC_DIR}
make ACTION=clean tree_basic
# now tar up the PETSc tree
cd /sandbox/petsc
/bin/tar --create --file $tmpdir/petsc.tar --exclude=SCCS --exclude-from  ${PETSC_DIR}/maint/xclude  petsc-dist
cd $tmpdir
/bin/tar xf $tmpdir/petsc.tar
mv petsc-dist petsc
#
# Before Creating the tarfile, make changes to the bmakefiles/makefiles,
# create tagfiles etc. permissions etc.
#
cd $tmpdir/petsc

# Eliminate chmods in the makefile & bmake/common/rules
/bin/mv makefile makefile.bak
/bin/grep -v 'chmod' makefile.bak > makefile
/bin/rm -f makefile.bak

/bin/mv bmake/common/rules bmake/common/rules.bak
/bin/grep -v 'chmod' bmake/common/rules.bak > bmake/common/rules
/bin/rm -f  bmake/common/rules.bak

# eliminate .html files in src/contrib
/usr/bin/find src/contrib -type f -name "*.html" -exec /bin/rm -f {} \;
# eliminate .pyc files if any
/usr/bin/find . -type f -name "*.pyc" -exec /bin/rm -f {} \;
# Create EMACS-TAGS
make alletags 
# Update project files
cd $tmpdir/petsc/projects; make

# Set the correct file permissions.
cd $tmpdir
chmod -R a-w petsc
chmod -R u+w petsc
chmod -R a+r petsc
find petsc -type d -name "*" -exec chmod a+x {} \;

/bin/rm -f $tmpdir/petsc.tar
if [ ! ${version}foo = foo ] ; then
  /bin/mv petsc petsc$version
fi

/bin/tar cf $tmpdir/petsc$version.tar petsc$version
/bin/rm -r -f $tmpdir/petsc$version
gzip -f $tmpdir/petsc$version.tar
/bin/cp $tmpdir/petsc$version.tar.gz ~/
/bin/rm -f $tmpdir/petsc$version.tar.gz
chmod ug+w ~/petsc$version.tar.gz

echo "Ending date: `date`"
