
   Priorities 0 - highest 4 - lowest

  ----
  Bugs  ALWAYS Priority 0
  ----

 (Priority 0)  Configure needs to set the right compiler for linking!!  [PETSC #12367] When should
it use C++ to link fortran, when C when Fortran???

  Fix all MatPartitioners to optionally turn on edge weights from the matrix values.
  Currently the are ignored for all partitioners except parmetis, where they are 
  incorrectly always used.

  (Priority 0) We need to have MPI.py properly detect if the MPI macros
in PETSc can be used and turn them off if they cannot.
Better to add a new flag like PETSC_USE_MPI_MACROS

   (Priority 0) If shared libraries is turned on, need configure test that each external package
  can go into shared library. Trouble on Mac

  -------------
  Optimizations
   ------------

    Add flag to DA that allows setting the preallocation for the matrices generated but not 
    the zero values (this option can only be used if not doing FD or AD computation of the Jacobian
    using color, so try to add error checking to prevent users from screwing up.

    (Priority 1) Use blocksize in MPIAIJ to pass in getsubmatrices for faster in ASM.

    Fix MatGet/RestoreRow/ColumnIJ() to have an additional flag indicating if one may change the
   ia and ja data. Then the reoordering codes need to check that flag since Sparsepack corrupts the data.

     ------------------------------------------------------------
     Missing functionality (for a particular data storage or size)
     ------------------------------------------------------------
     + (Satish) Convert the Tufo-Fischer parallel direct solver to its own PC extend to other matrix types

     Add support for MatLoad() for Matlab .mat files; we already have the view.

  -----------------
  New functionality
  -----------------
  (Priority 1) Add DAVecGetArrayf90() Hmmm, thought I did this a long time ago?

  Support overlapping finite difference grids using DA, see src/dm/da/examples/tutorials/ex6.c
  introduce geometric ghost points in DA, two sets of global vectors for DA's with and without the
  geometric ghost points, generate matrix vector to interpolate from global non-geometric ghosted
  to global geometric ghosted (this can be done by each processor sending its geometric ghost positions
  to all processors, then local search, what about duplicates?), then do DAGlobalToLocal on the 
  DA's to get local vectors to have all correct ghosted values. Easy.

  Add MatSolveForward/Back() per Jose petsc-maint 9785

    Make a Mat type of PC and KSP.

  allow matrix to share another matrices stuff and its stored numerical values petscmaint 12168

  Interface for vectors to fftw.

   (Priority 1) Add new KSP that allows reordering unknowns (parallel or sequential) for better performance
   and then calls regular KSP. Or should this be PC?

   (Priority 2) General mechanism for DMGetMatrix() etc ...for composite matrices

  Make all KSP (if possible) use either preocnditioned or unpreconditioned norms for monitoring & convergence (e.g. BCGSL)

  Configure: Look for classes in libraries instead of just functions

  ------------
  Cleaner code
  ------------

  (Priority 2) Add more PetscMallocXXX() in MatGetOverlap() and getsubmatrices etc()

  (Priority 0) Fix bad macros with inline

   Make binary file and socket viewers subclass off a common binary viewer

   Add _SNESOps function table, dang I can't beleive we don't have it yet

  ---------------------
  Better user interface 
  ---------------------

  (Priority 1) Change setfromoptions for sor to use Enum for setting symmetric, local etc

  (Priority 1) Allow setting precision of printed numbers in ASCII viewers.

  (Priority 1) add DAVecGatherAll and DAVecGather

     (Piority 1) Add option to KSP to generate error when convergence fails, rather than continuing with ConvergedReason
     Take out calls to SETERRQ directly in KSP solvers and replace with correct ConvergedReason

   (Priority 1) Add option to SNES to generate error when convergence fails, rather than continuing with ConvergedReason

   (Priority 2) Remove VecLoadIntoVector() and change VecLoad() to take a Vec as input allow setting type before sizes
   provide VecSetMap()

  (Priority 2) Change MatLoad() to take a matrix, move sizes out of MatCreate(), add MatSetMaps(), allow setting type before sizes
   Also allow loading matrices with the same nonzero pattern efficiently.

  (Priority 1) Modify PC_MG to allow setters and fold DMMG and ML (and maybe hypre) into it?

  Add MatOption POSITIVE_DEFINITE and have KSP default to CG if that plus symmetric set

  ------------------------
  Algorithmic improvements
  ------------------------
    Figure out why gmres as smoother for one iteration can be some much better
    than Richardson? Is it computing some good damping factor?

    Make LSQR properly handle nonzero initial guess by simply computing the residual right hand side; solving
    that and then adding back the initial guess.

    Add support for point block diagonal scaling the matrix before calling KSPSolve.

  -------
  Testing
  -------

   Test everywhere with Lam

   (Priority 0) PetscInt long long

   (Priority 0) configure for all packages, with install option for as many as possible

   (Priority 0) Test support for requesting 32 bit or 64 bit code

   (Priority 1) Test that the Fortran preprocessor actually preprocesses somehow

   We should have performance benchmarking to make sure code performance is not decreased by changes

  ------------
  Interfaces to external packages
  ------------
   An almost linear time LU solver for second order elliptic
   operators (http://www.math.uni-leipzig.de/~bebendorf/AHMED.html)
   Another software library on Hierarchical Matrices for Elliptic
   Differential equations (AHMED)
   An approximate LU decomposition canbe computed in the algebra of
   hierarchical matrices with almost linear time complexity and with
   the same robustness as the classical LU decomposition method.

   DUNE, the Distributed and Unified Numerics Environment 
   (http://hal.iwr.uni-heidelberg.de/dune)
   DUNE aims to reach the following goals:
    - Distributed development
    - Unified access to different grid managers (ALBERTA , UG),
      visualization tools (Grape), solvers, etc.
    - high level abstraction through Operator concept

    ILUPACK www.math.tu-berlin.de/ilupack
      
  ------------
  PR 
  ------------
  Add all PETSc user publications we find from scholar.google.com
  
  -------------
  Documentation
  -------------

  add support to lgrind to map char string tokens with htmlmap. Cannot do it before applying
  lgrind cause it cannot parse tex. Cannot do it after lgrind because maplatexnames.py cannot
  handle the yucky latex lgrind generates. Should be easy cannibalizing stuff from Bill's sowing.

  keywords in maual pages should get listed in help topic list

  need python tool to find all manual page functions that are missing in the users manual.

   Add troubleshooting entries and error messages with web address for common errors.

  -----
  other
  -----
 
   Make test in compilers.py if compiler is f90 or not

   Get version for mpcc_r, mpCC_r, mpxlf_r, absoft F90, intel F90 (ifc and ifort), compaq F90

   Strip newlines from version for PG F90, Intel C/C++

   It would be nice if someday configure could get the "compute nodes" to see
   that they have the appropriate shared libraries that are used when compiling
   or otherwise the static libraries are used.

