
   Priorities 0 - highest 4 - lowest

  ----
  Bugs  ALWAYS Priority 0
  ----

  Fix all MatPartitioners to optionally turn on edge weights from the matrix values.
  Currently the are ignored for all partitioners except parmetis, where they are 
  incorrectly always used.

  If shared libraries is turned on, need configure test that each external package
  can go into shared library. Trouble on Mac

  -------------
  Optimizations
   ------------
  Change DACreateXXX to create VecScatters() that have the dof blocksize. Currently (sadly)
  the are still pointwise. This will improve DAGlobalToLocalBegin/End() some (a few %, more?)

   Check if indices passed into vecscattercreate are sorted (often they will be); if they are then 
   do much faster check to which processor owns them

    Use blocksize in MPIAIJ to create faster scattergather for mat-mult and pass in getsubmatrices for faster
    in ASM.

    Fix MatGet/RestoreRow/ColumnIJ() to have an additional flag indicating if one may change the
   ia and ja data. Then the reoordering codes need to check that flag since Sparsepack corrupts the data.

     ------------------------------------------------------------
     Missing functionality (for a particular data storage or size)
     ------------------------------------------------------------
     + (Satish) Convert the Tufo-Fischer parallel direct solver to its own PC extend to other matrix types

     Add norms for BAIJ matrices

  -----------------
  New functionality
  -----------------
  (Priority 1) Add DAVecGetArrayf90() Hmmm, thought I did this a long time ago?

  Add MatSolveForward/Back() per Jose petsc-maint 9785

    Make a Mat type of PC and KSP.

  allow matrix to share another matrices stuff and its stored numerical values petscmaint 12168

  Interface for vectors to fftw.

   (Priority 1) Add new KSP that allows reordering unknowns (parallel or sequential) for better performance
   and then calls regular KSP.

   (Priority 2) General mechanism for DMGetMatrix() etc ...for composite matrices

   Make Fortran kernels support PetscInt 

  ------------
  Cleaner code
  ------------

  (Priority 0) change PetscLogEventBarrierBegin() and friends to use ? : || ... to properly return error codes

  (Priority 0) for configure optional external packages, write a package independent rule to check if the
  user wants the package installed and if all stuff it needs is available. See hypre.py
  for a template. Put the rule up in the ../../PETSc directory

   Add _SNESOps function table, dang I can't beleive we don't have it yet

  ---------------------
  Better user interface 
  ---------------------
  (Priority 0) Add support for configure nonsense like --without --disable --enable ...

  (Priority 0) Have make in the root directory stop on error in any compile! Default behavior

  Allow setting precision of printed numbers in ASCII viewers.

  (Priority 1) add DAVecGatherAll and DAVecGather

  (Priority 1) all Raise RuntimeError() in configure that are intended for users 
  should have instead self.framework.Box('message','url') that formats the 
  message with ** around it for users to see easily.


  Do more error checking on user input arguments for nice error messages like if they
  pass a directory for -with-blas-lapack-dir or the other way around

   (Priority 1) Add option to KSP to compute and print true residual norm after solve is complete.

     Add option to KSP to generate error when convergence fails, rather than continuing with ConvergedReason
     Take out calls to SETERRQ directly in KSP solvers and replace with correct ConvergedReason

   Add option to SNES to generate error when convergence fails, rather than continuing with ConvergedReason

   (Priority 2) Remove VecLoadIntoVector() and change VecLoad() to take a Vec as input allow setting type before sizes
   provide VecSetMap()

  (Priority 2) Change MatLoad() to take a matrix, move sizes out of MatCreate(), add MatSetMaps(), allow setting type before sizes
   Also allow loading matrices with the same nonzero pattern efficiently.

  Add PCShellSetContext()/GetContext() and remove the ctx and ctxrich passed into setapply and setapplyrichardson()
  indicates limits on context from Fortran. (Make like MatShell())

  (Priority 1) Modify PC_MG to allow setters and fold DMMG and ML (and maybe hypre) into it?

  Add MatOption POSITIVE_DEFINITE and have KSP default to CG if that plus symmetric set

  ------------------------
  Algorithmic improvements
  ------------------------
    Figure out why gmres as smoother for one iteration can be some much better
    than Richardson? Is it computing some good damping factor?

    Make LSQR properly handle nonzero initial guess by simply computing the residual right hand side; solving
    that and then adding back the initial guess.

    Add support for point block diagonal scaling the matrix before calling KSPSolve.

  -------
  Testing
  -------
   PetscInt long long

   (Priority 0) configure for all packages, with install option for as many as possible

   (Priority 1) Test support for requesting 32 bit or 64 bit code

   We should have performance benchmarking to make sure code performance is not decreased by changes

  -------------
  Documentation
  -------------
  keywords in maual pages should get listed in help topic list

  need python tool to find all manual page functions that are missing in the users manual.

   Add troubleshooting entries and error messages with web address for common errors.

  (Priority 0 Hong) Manual pages for mat ordering/coloring/partitioning types
                    Manual pages for partitioners

  -----
  other
  -----
 
   Make test in compilers.py if compiler is f90 or not

   Get version for mpcc_r, mpCC_r, mpxlf_r, absoft F90, intel F90 (ifc and ifort), compaq F90

   Strip newlines from version for PG F90, Intel C/C++

   It would be nice if someday configure could get the "compute nodes" to see
   that they have the appropriate shared libraries that are used when compiling
   or otherwise the static libraries are used.

