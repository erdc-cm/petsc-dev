#
#     See the file bmake/variables.defs for a complete explanation of all these fields
#
AR               = @AR@
AR_FLAGS         = @AR_FLAGS@
RM               = rm -f
OMAKE            = @MAKE@ --no-print-directory
RANLIB           = @RANLIB@
SHELL            = /bin/sh
SED              = /bin/sed
MKDIR            = @MKDIR@
@SET_MAKE@
#
PARCH            = @PETSC_ARCH@
LIB_SUFFIX       = a
DIFF             = diff

top_builddir     = @PETSC_DIR@
LIBTOOL          = @LIBTOOL@
# ######################### C and Fortran compiler ########################
#
C_CC       = @LT_CC@ @CC@ @CC_SHARED_OPT@
C_FC       = @FC@ @FC_SHARED_OPT@
# SLFLAG=? (-R on solaris)
# For now, assume that this is the linker dir flag
C_CLINKER_SLFLAG   = -rdynamic -Wl,-rpath,
C_FLINKER_SLFLAG   = -rdynamic -Wl,-rpath,
# Must put linker flags here for now
C_CLINKER  = @CC@ @LDFLAGS@
C_FLINKER  = @FC@ @LDFLAGS@
# What is CCV? Solaris base is cc -V -c | head -1
C_CCV      = @CC@ --version | head -1
C_FCV	   = @FC@ --version | head -1
C_SYS_LIB  = @LIBS@
# ########################## FIXES FOR BROKEN DEFINITIONS IN COMMON_x ######
# The definitions of CLINKER and FLINKER in the PETSc bmake/common_xxx 
# contain an explicit : character for an option that we are not using nor
# need.  This causes the configure-based builds to fail.
# The following was an attempt to override the bogus definitions.
###CLINKER	       = ${C_CLINKER} ${COPTFLAGS} 
###FLINKER	       = ${C_FLINKER} ${FOPTFLAGS} 
# Regrettably, this file loses in the war of battling definitions.
# Fixing this requires changing common_xxx.
# I belive that these should in fact be
CLINKER = ${C_CLINKER} @LDFLAGS@ ${COPTFLAGS} ${C_CLINKER_SL_PATH}
FLINKER = ${C_FLINKER} @LDFLAGS@ ${FOPTFLAGS} ${C_FLINKER_SL_PATH}
# where C_CLINKER_SL_PATH is defined in the architecture-specific base files.
# A typical definition might be
C_CLINKER_SL_PATH = ${C_CLINKER_SLFLAG}${LDIR}:${C_DYLIBPATH}
C_FLINKER_SL_PATH = ${C_FLINKER_SLFLAG}${LDIR}:${F_DYLIBPATH}
# but might also be
# C_CLINKER_SL_PATH = 
# ---------------------------- BOPT=g options ----------------------------
G_COPTFLAGS      = -g
G_FOPTFLAGS      = -g
# ----------------------------- BOPT=O options -----------------------------
O_COPTFLAGS      = -O -Wall -Wshadow -fomit-frame-pointer
O_FOPTFLAGS      = -O
# ########################## C++ compiler ##################################
#
CXX_CC           = @CXX@
CXX_FC           = @FC@   -xpp=cpp
CXX_CLINKER_SLFLAG =
CXX_FLINKER_SLFLAG =
CXX_CLINKER      = @CXX@
CXX_FLINKER      = @CXX@
# What is CXX_CCV?
CXX_CCV          = @CXX@ --version | head -1
CXX_SYS_LIB      = @LIBS@ @FC_LIB@
# ------------------------- BOPT=g_c++ options ------------------------------
GCXX_COPTFLAGS   = -g
GCXX_FOPTFLAGS   = -g
# ------------------------- BOPT=O_c++ options ------------------------------
OCXX_COPTFLAGS   = -O
OCXX_FOPTFLAGS   = -O
# -------------------------- BOPT=g_complex options ------------------------
GCOMP_COPTFLAGS  = -g
GCOMP_FOPTFLAGS  = -g
# --------------------------- BOPT=O_complex options -------------------------
OCOMP_COPTFLAGS  = -O
OCOMP_FOPTFLAGS  = -O
# ########################### PETSc install options ###########################
G_PETSCFLAGS     = -DPETSC_USE_DEBUG  -DPETSC_USE_LOG -DPETSC_USE_BOPT_g \
                   -DPETSC_USE_STACK 
O_PETSCFLAGS     = -DPETSC_USE_DEBUG  -DPETSC_USE_BOPT_O -DPETSC_USE_LOG
GCXX_PETSCFLAGS  = -DPETSC_USE_DEBUG  -DPETSC_USE_LOG -DPETSC_USE_BOPT_g \
                   -DPETSC_USE_STACK
OCXX_PETSCFLAGS  =  -DPETSC_USE_DEBUG  -DPETSC_USE_LOG -DPETSC_USE_BOPT_O
GCOMP_PETSCFLAGS = -DPETSC_USE_DEBUG  -DPETSC_USE_LOG -DPETSC_USE_BOPT_g \
                   -DPETSC_USE_COMPLEX  -DUSE_FORTRAN_KERNELS -DPETSC_USE_STACK
OCOMP_PETSCFLAGS = -DPETSC_USE_DEBUG  -DPETSC_USE_LOG -DPETSC_USE_BOPT_O \
                   -DPETSC_USE_COMPLEX  -DUSE_FORTRAN_KERNELS
# ############################ Notes ############################################
#
#  1) use the Solaris command fpversion to get detailed compiler optimization
#     flags regarding the cache, e.g.
#fire>fpversion
#Use "-xtarget=ultra2 -xcache=16/32/1:2048/64/1" code-generation option.
#
##################################################################################
#
#   PETSc installers should very rarely ever need to edit anything below this 
#
##################################################################################

