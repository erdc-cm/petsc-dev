

LANGUAGES =  c++

CFLAGS = ${BABEL_INCLUDE} 

SIDLFILES = ${PETSC_DIR}/src/tops/tops.sidl ${SIDL}

parse-check:
	${BABEL} -R${CCA_REPO} --parse-check ${SIDLFILES}

#-------------------------------------------------------------------------------
clients: 
	-@for LANGUAGE in $(LANGUAGES); do \
		echo -e "\n### Building $$LANGUAGE client library."; \
		${BABEL} -R${CCA_REPO} --suppress-timestamp -c $$LANGUAGE -o ./client/$$LANGUAGE ${SIDLFILES} ; \
		cat client/$$LANGUAGE/babel.make | sed s/\\.cc/.o/g | sed s/\\.c/.o/g > client/$$LANGUAGE/makefile; \
		echo "include ${PETSC_DIR}/src/tops/makefile.rules" >> client/$$LANGUAGE/makefile; \
		$(OMAKE) -C client/$$LANGUAGE LANGUAGE=$$LANGUAGE libclient-$$LANGUAGE;\
	done
	touch $@

libclient-c: 
	-@${CC} -c ${CC_FLAGS} ${COPTFLAGS} ${CFLAGS} ${CCPPFLAGS}  *.cc
	-@${C_CC} -c ${C_CC_FLAGS} ${COPTFLAGS} ${CFLAGS} ${CCPPFLAGS}  *.c
	-@$(OMAKE)  LIBNAME=libclient-${LANGUAGE} SHARED_LIBRARY_TMPDIR=. OTHERLIBS="${BABEL_LIB} ${SL_LINKER_LIBS} ${SYS_LIB}" shared_arch

libclient-c++: libclient-c


libclient-python: 
	-@python setup.py --include-dirs=${BABEL_INCLUDE} --include-dirs=${BABEL_INCLUDE}/python2.4/babel --library-dirs=${BABEL_LIB_DIR}  install   --install-purelib=./ --install-platlib=./ --install-headers=include --install-scripts=scripts --install-data=data

#-------------------------------------------------------------------------------
server-c++:  server/c++/makefile
	-@cd server/c++; make TLIBNAME=${TLIBNAME} libserver-c++.${SOSUFFIX}

server/c++/makefile: ${SIDLFILES}
	@-${BK} edit server/c++/*_Impl.cc server/c++/*_Impl.hh
	-${BABEL} -R ${CCA_REPO} --suppress-timestamp --server=c++ --output-directory=./server/c++ ${SIDLFILES}
	@-${RM} ${REMOVEFILES}
	echo "include ${PETSC_DIR}/src/tops/makefile.rules" > server/c++/makefile

libserver-c++.${SOSUFFIX}: 
	-@${CC} -c ${CC_FLAGS} ${COPTFLAGS} ${CFLAGS} ${CCPPFLAGS} -I${PETSC_DIR}/src/tops/server/c++ *.cc
	-@${C_CC} -c ${C_CC_FLAGS} ${COPTFLAGS} ${CFLAGS} ${CCPPFLAGS} -I${PETSC_DIR}/src/tops/server/c++  *.c
	-@$(OMAKE)  LIBNAME=${TLIBNAME} SHARED_LIBRARY_TMPDIR=. OTHERSHAREDLIBS="${BABEL_LIB} ${SL_LINKER_LIBS} ${SYS_LIB} ${CC_LINKER_SLFLAG}${PETSC_LIB_DIR} ${PETSC_LIB}" shared_arch
#-------------------------------------------------------------------------------

ifeq ($(EXNUM),)
  EXNUM=1
endif
cca: 
	# Generating *.cca files
	@${PETSC_DIR}/src/tops/utils/genSCLCCA.sh cca ${PETSC_LIB_DIR}/libtops.${SL_LINKER_SUFFIX} \
		TOPS.StructuredSolver c++ dynamic global now TOPS.StructuredSolver \
		> libtops.${SL_LINKER_SUFFIX}.cca.in
	@sed -e /"@PETSC_LIB_DIR@/ s|@PETSC_LIB_DIR@|${PETSC_LIB_DIR}|" \
		-e /"@SOSUFFIX@/ s|@SOSUFFIX@|${SL_LINKER_SUFFIX}|" \
		libtops.${SL_LINKER_SUFFIX}.cca.in >  ${PETSC_LIB_DIR}/libtops.${SL_LINKER_SUFFIX}.cca
	@${PETSC_DIR}/src/tops/utils/genSCLCCA.sh cca ${PETSC_LIB_DIR}/libex$(EXNUM).${SL_LINKER_SUFFIX} \
		Ex$(EXNUM).System c++ dynamic global now Ex$(EXNUM).System > libex$(EXNUM).${SL_LINKER_SUFFIX}.cca.in
	@sed -e /"@PETSC_LIB_DIR@/ s|@PETSC_LIB_DIR@|${PETSC_LIB_DIR}|" \
	    	-e /"@SOSUFFIX@/ s|@SOSUFFIX@|${SL_LINKER_SUFFIX}|" \
		libex$(EXNUM).${SL_LINKER_SUFFIX}.cca.in > ${PETSC_LIB_DIR}/libex$(EXNUM).${SL_LINKER_SUFFIX}.cca
	@-${RM} *.cca.in
	# Creating simple Ccaffeine script
	@sed -e /"@PETSC_LIB_DIR@/ s|@PETSC_LIB_DIR@|${PETSC_LIB_DIR}|" ex$(EXNUM)_rc.in > ex$(EXNUM)_rc
	@sed -e /"@PETSC_LIB_DIR@/ s|@PETSC_LIB_DIR@|${PETSC_LIB_DIR}|" ex$(EXNUM)_gui_rc.in > ex$(EXNUM)_gui_rc

test-cca: cca
	# Testing component example with Ccaffeine
	@${CCAFE_HOME}/bin/ccafe-single --ccafe-rc ex$(EXNUM)_rc > ex$(EXNUM)_rc.log  2>&1 ; 
	@if [ "`egrep \"(specific|1 .+norm)\" ex$(EXNUM)_rc.log | wc -l`" -eq "2" ];then \
	  echo -e "\n=== Component test succeeded (see ex$(EXNUM)_rc.log).\n"; \
	else \
          echo -e "\n*** Component test failed (see ex$(EXNUM)_rc.log).\n"; \
        fi

gui-cca: cca
	# Run component example using Ccaffeine GUI (the output is in pOut0/pErr0)
	@${CCAFE_HOME}/bin/gui-backend.sh --port 4242 --ccafe-rc \
		ex$(EXNUM)_gui_rc > .ccafe.out 2>&1 & \
	echo -e "\nPlease wait...\n"; sleep 5; \
	${CCAFE_HOME}/bin/gui.sh --port 4242 # --scaleFont 1.5

kill-gui:
	# Clean up after GUI 
	@-${CCAFE_HOME}/bin/gui.sh --kill; ${CCAFE_HOME}/bin/gui-backend.sh --kill

#-------------------------------------------------------------------------------


include ${PETSC_DIR}/bmake/common/base
include ${PETSC_DIR}/bmake/common/test



